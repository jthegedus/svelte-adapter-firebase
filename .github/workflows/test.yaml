name: Tests

on:
  push:
    branches:
      - main
  pull_request:

env:
  CI: true
  FIREBASE_EMULATORS_PATH: ${{ github.workspace }}/emulator-cache

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install asdf
        uses: asdf-vm/actions/install@v1
      - run: pnpm install
      - run: pnpm run test

  integration:
    runs-on: ubuntu-latest
    needs:
      - unit
    strategy:
      fail-fast: true
      matrix:
        params:
          - {
              test_dir: "functions_single_site",
              validation_app_dir: "public/about/index.html",
              validation_compute_dir: "functions/sveltekit/index.js",
              nested_dir: ".",
            }
          - {
              test_dir: "nested_app_dirs",
              validation_app_dir: "public/about/index.html",
              validation_compute_dir: "functions/sveltekit/index.js",
              nested_dir: "app",
            }
          - {
              test_dir: "run_service_id",
              validation_app_dir: "public/about/index.html",
              validation_compute_dir: "functions/cloudrun/index.js",
              nested_dir: ".",
            }
    steps:
      - uses: actions/checkout@v2
      - name: install asdf
        uses: asdf-vm/actions/install@v1
      - name: Run Integration test for ${{ matrix.params.test_dir }}
        run: |
          bash ./tests/integration/integration-test.bash ${{ matrix.params.test_dir }} ${{ matrix.params.validation_app_dir }} ${{ matrix.params.validation_compute_dir }} ${{ matrix.params.nested_dir }}

  end-to-end:
    runs-on: ubuntu-latest
    needs:
      - unit
    steps:
      - uses: actions/checkout@v2
      - name: install asdf
        uses: asdf-vm/actions/install@v1
      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ${{ env.FIREBASE_EMULATORS_PATH }}
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('emulator-cache/**') }}
        continue-on-error: true
      - name: Run end-to-end test script
        run: |
          bash ./tests/end-to-end/test.bash
